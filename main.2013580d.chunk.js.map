{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","prop","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","defaultProps","about","Textarea","props","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","innerHTML","length","Alert","alert","class","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2013580d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { a } from \"react-router-dom\";\r\n\r\nexport default function Navbar(prop) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${prop.mode} bg-${prop.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {prop.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-a active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-a\" href=\"/about\">\r\n                  {prop.about}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n            <div className={`form-check form-switch text-${prop.mode==='light'?'dark':'light'}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick = {prop.toggleMode}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set Title Here\",\r\n  about: \"Set About Here\",\r\n};\r\n","import React, {useState} from 'react'\r\nimport './Text.css'\r\nexport default function Textarea(props) {\r\n    \r\n    const upperClick = ()=>{\r\n        console.log(\"uppercase clicked\" +text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\" ,\"success\")\r\n    }\r\n    const LowClick = ()=>{\r\n        console.log(\"uppercase clicked\" +text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\" ,\"success\")\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"on change\")\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const clearText = ()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"Cleared text successfully!\" ,\"success\")\r\n    }\r\n    const BoldText = () =>{\r\n        let element = document.getElementById('exampleFormControlTextarea1');\r\n        element.innerHTML = \"<b>{}</b>\"\r\n    }\r\n  \r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color : props.mode==='dark'?'white':'black'}}>\r\n            <div className=\"mb-3\">\r\n            <h1>{props.heading}</h1>\r\n            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" value = {text} onChange = {handleOnChange} style={{backgroundColor : props.mode==='dark'?'grey':'white',color : props.mode==='dark'?'white':'black'}} rows=\"8\"></textarea>\r\n            <button className=\"btn btn-primary my-3 mx-2\" onClick={upperClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary my-3 mx-2\" onClick={LowClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary my-3 mx-2\" onClick={clearText}>Clear text</button>\r\n            <button className=\"btn btn-primary my-3 mx-2\" onClick={BoldText}>Bold text</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"container\" style={{color : props.mode==='dark'?'white':'black'}}>\r\n            <h1>Text Summary</h1>\r\n            <p>{text.length} characters</p>\r\n        </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport { useState } from 'react/cjs/react.development';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Textarea from \"./components/Textarea\";\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode]= useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (msg,type)=>{\n    setAlert({\n      msg: msg,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode('dark');\n      showAlert(\"Dark Mode has been enabled\",\"success\")\n      \n      document.body.style.backgroundColor = 'grey';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\",\"success\")\n    }\n  }\n  return (\n  \n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextEditor\" mode = {mode} toggleMode = {toggleMode} about=\"About us\"/>\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\" >\n    {/* <Switch> */}\n          {/* <Route path=\"/about\">\n            <About mode = {mode} />\n          </Route> */}\n          {/* <Route path=\"/\"> */}\n          <Textarea id=\"textarea\" showAlert = {showAlert} heading=\"Enter the text\" mode = {mode}/>\n          {/* </Route>\n        </Switch> */}\n      \n      \n      \n      </div>\n    {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}